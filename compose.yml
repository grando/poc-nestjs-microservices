version: '3.8'

services:

  service-a:
    container_name: service-a
    build: 
      context: ./service-a
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - SERVICE_B_URL=http://service-b:3000
    volumes:
      - ./service-a:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3002:3000"
    depends_on:
      - service-b
    #command: npm install && npm run dev    
    #command: tail -f /dev/null
    networks:
      - system-network

  service-b:
    container_name: service-b
    build: 
      context: ./service-b
      dockerfile: Dockerfile    
    environment:
      NODE_ENV: development
      MONGODB_URI: mongodb://root:password@mongo-db:27017
    depends_on:
      - mongo-db
    volumes:
      - ./service-b:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "3001:3000"
    #command: npm install && npm run dev    
    #command: tail -f /dev/null
    networks:
      - system-network

  mongo-db:
    container_name: mongo-db
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - system-network
    volumes:
      - mongo-data:/data/db

  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    ports:
      - 3081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo-db
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
    networks:
      - system-network
    depends_on:
      - mongo-db

networks:
  system-network:
    driver: bridge

volumes:
  mongo-data:
  